#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MessengerApp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MessengerDB")]
	public partial class DCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTbl_Messenger_Attachment(Tbl_Messenger_Attachment instance);
    partial void UpdateTbl_Messenger_Attachment(Tbl_Messenger_Attachment instance);
    partial void DeleteTbl_Messenger_Attachment(Tbl_Messenger_Attachment instance);
    partial void InsertTbl_Messenger_User(Tbl_Messenger_User instance);
    partial void UpdateTbl_Messenger_User(Tbl_Messenger_User instance);
    partial void DeleteTbl_Messenger_User(Tbl_Messenger_User instance);
    partial void InsertTbl_Messenger_Communication(Tbl_Messenger_Communication instance);
    partial void UpdateTbl_Messenger_Communication(Tbl_Messenger_Communication instance);
    partial void DeleteTbl_Messenger_Communication(Tbl_Messenger_Communication instance);
    partial void InsertTbl_Messenger_CommunicationType(Tbl_Messenger_CommunicationType instance);
    partial void UpdateTbl_Messenger_CommunicationType(Tbl_Messenger_CommunicationType instance);
    partial void DeleteTbl_Messenger_CommunicationType(Tbl_Messenger_CommunicationType instance);
    partial void InsertTbl_Messenger_CommunicationUser(Tbl_Messenger_CommunicationUser instance);
    partial void UpdateTbl_Messenger_CommunicationUser(Tbl_Messenger_CommunicationUser instance);
    partial void DeleteTbl_Messenger_CommunicationUser(Tbl_Messenger_CommunicationUser instance);
    partial void InsertTbl_Messenger_Joined(Tbl_Messenger_Joined instance);
    partial void UpdateTbl_Messenger_Joined(Tbl_Messenger_Joined instance);
    partial void DeleteTbl_Messenger_Joined(Tbl_Messenger_Joined instance);
    partial void InsertTbl_Messenger_Message(Tbl_Messenger_Message instance);
    partial void UpdateTbl_Messenger_Message(Tbl_Messenger_Message instance);
    partial void DeleteTbl_Messenger_Message(Tbl_Messenger_Message instance);
    #endregion
		
		public DCDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MessengerDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tbl_Messenger_Attachment> Tbl_Messenger_Attachments
		{
			get
			{
				return this.GetTable<Tbl_Messenger_Attachment>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Messenger_User> Tbl_Messenger_Users
		{
			get
			{
				return this.GetTable<Tbl_Messenger_User>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Messenger_Communication> Tbl_Messenger_Communications
		{
			get
			{
				return this.GetTable<Tbl_Messenger_Communication>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Messenger_CommunicationType> Tbl_Messenger_CommunicationTypes
		{
			get
			{
				return this.GetTable<Tbl_Messenger_CommunicationType>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Messenger_CommunicationUser> Tbl_Messenger_CommunicationUsers
		{
			get
			{
				return this.GetTable<Tbl_Messenger_CommunicationUser>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Messenger_Joined> Tbl_Messenger_Joineds
		{
			get
			{
				return this.GetTable<Tbl_Messenger_Joined>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Messenger_Message> Tbl_Messenger_Messages
		{
			get
			{
				return this.GetTable<Tbl_Messenger_Message>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectCommunicationId")]
		public ISingleResult<SelectCommunicationIdResult> SelectCommunicationId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="User1", DbType="BigInt")] System.Nullable<long> user1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User2", DbType="BigInt")] System.Nullable<long> user2)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user1, user2);
			return ((ISingleResult<SelectCommunicationIdResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Messenger_Attachment")]
	public partial class Tbl_Messenger_Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Fld_Attachment_ID;
		
		private string _Fld_Attachment_FileName;
		
		private string _Fld_Attachment_FileNameOrginal;
		
		private string _Fld_Attachment_ContentType;
		
		private EntitySet<Tbl_Messenger_Message> _Tbl_Messenger_Messages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFld_Attachment_IDChanging(long value);
    partial void OnFld_Attachment_IDChanged();
    partial void OnFld_Attachment_FileNameChanging(string value);
    partial void OnFld_Attachment_FileNameChanged();
    partial void OnFld_Attachment_FileNameOrginalChanging(string value);
    partial void OnFld_Attachment_FileNameOrginalChanged();
    partial void OnFld_Attachment_ContentTypeChanging(string value);
    partial void OnFld_Attachment_ContentTypeChanged();
    #endregion
		
		public Tbl_Messenger_Attachment()
		{
			this._Tbl_Messenger_Messages = new EntitySet<Tbl_Messenger_Message>(new Action<Tbl_Messenger_Message>(this.attach_Tbl_Messenger_Messages), new Action<Tbl_Messenger_Message>(this.detach_Tbl_Messenger_Messages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Attachment_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Fld_Attachment_ID
		{
			get
			{
				return this._Fld_Attachment_ID;
			}
			set
			{
				if ((this._Fld_Attachment_ID != value))
				{
					this.OnFld_Attachment_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_Attachment_ID = value;
					this.SendPropertyChanged("Fld_Attachment_ID");
					this.OnFld_Attachment_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Attachment_FileName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Fld_Attachment_FileName
		{
			get
			{
				return this._Fld_Attachment_FileName;
			}
			set
			{
				if ((this._Fld_Attachment_FileName != value))
				{
					this.OnFld_Attachment_FileNameChanging(value);
					this.SendPropertyChanging();
					this._Fld_Attachment_FileName = value;
					this.SendPropertyChanged("Fld_Attachment_FileName");
					this.OnFld_Attachment_FileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Attachment_FileNameOrginal", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Fld_Attachment_FileNameOrginal
		{
			get
			{
				return this._Fld_Attachment_FileNameOrginal;
			}
			set
			{
				if ((this._Fld_Attachment_FileNameOrginal != value))
				{
					this.OnFld_Attachment_FileNameOrginalChanging(value);
					this.SendPropertyChanging();
					this._Fld_Attachment_FileNameOrginal = value;
					this.SendPropertyChanged("Fld_Attachment_FileNameOrginal");
					this.OnFld_Attachment_FileNameOrginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Attachment_ContentType", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Fld_Attachment_ContentType
		{
			get
			{
				return this._Fld_Attachment_ContentType;
			}
			set
			{
				if ((this._Fld_Attachment_ContentType != value))
				{
					this.OnFld_Attachment_ContentTypeChanging(value);
					this.SendPropertyChanging();
					this._Fld_Attachment_ContentType = value;
					this.SendPropertyChanged("Fld_Attachment_ContentType");
					this.OnFld_Attachment_ContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_Attachment_Tbl_Messenger_Message", Storage="_Tbl_Messenger_Messages", ThisKey="Fld_Attachment_ID", OtherKey="Fld_Attachment_ID")]
		public EntitySet<Tbl_Messenger_Message> Tbl_Messenger_Messages
		{
			get
			{
				return this._Tbl_Messenger_Messages;
			}
			set
			{
				this._Tbl_Messenger_Messages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Messenger_Messages(Tbl_Messenger_Message entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_Attachment = this;
		}
		
		private void detach_Tbl_Messenger_Messages(Tbl_Messenger_Message entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_Attachment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Messenger_User")]
	public partial class Tbl_Messenger_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Fld_User_ID;
		
		private string _Fld_User_Name;
		
		private EntitySet<Tbl_Messenger_CommunicationUser> _Tbl_Messenger_CommunicationUsers;
		
		private EntitySet<Tbl_Messenger_Message> _Tbl_Messenger_Messages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFld_User_IDChanging(long value);
    partial void OnFld_User_IDChanged();
    partial void OnFld_User_NameChanging(string value);
    partial void OnFld_User_NameChanged();
    #endregion
		
		public Tbl_Messenger_User()
		{
			this._Tbl_Messenger_CommunicationUsers = new EntitySet<Tbl_Messenger_CommunicationUser>(new Action<Tbl_Messenger_CommunicationUser>(this.attach_Tbl_Messenger_CommunicationUsers), new Action<Tbl_Messenger_CommunicationUser>(this.detach_Tbl_Messenger_CommunicationUsers));
			this._Tbl_Messenger_Messages = new EntitySet<Tbl_Messenger_Message>(new Action<Tbl_Messenger_Message>(this.attach_Tbl_Messenger_Messages), new Action<Tbl_Messenger_Message>(this.detach_Tbl_Messenger_Messages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_User_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Fld_User_ID
		{
			get
			{
				return this._Fld_User_ID;
			}
			set
			{
				if ((this._Fld_User_ID != value))
				{
					this.OnFld_User_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_User_ID = value;
					this.SendPropertyChanged("Fld_User_ID");
					this.OnFld_User_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_User_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Fld_User_Name
		{
			get
			{
				return this._Fld_User_Name;
			}
			set
			{
				if ((this._Fld_User_Name != value))
				{
					this.OnFld_User_NameChanging(value);
					this.SendPropertyChanging();
					this._Fld_User_Name = value;
					this.SendPropertyChanged("Fld_User_Name");
					this.OnFld_User_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_User_Tbl_Messenger_CommunicationUser", Storage="_Tbl_Messenger_CommunicationUsers", ThisKey="Fld_User_ID", OtherKey="Fld_User_ID")]
		public EntitySet<Tbl_Messenger_CommunicationUser> Tbl_Messenger_CommunicationUsers
		{
			get
			{
				return this._Tbl_Messenger_CommunicationUsers;
			}
			set
			{
				this._Tbl_Messenger_CommunicationUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_User_Tbl_Messenger_Message", Storage="_Tbl_Messenger_Messages", ThisKey="Fld_User_ID", OtherKey="Fld_Message_SenderID")]
		public EntitySet<Tbl_Messenger_Message> Tbl_Messenger_Messages
		{
			get
			{
				return this._Tbl_Messenger_Messages;
			}
			set
			{
				this._Tbl_Messenger_Messages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Messenger_CommunicationUsers(Tbl_Messenger_CommunicationUser entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_User = this;
		}
		
		private void detach_Tbl_Messenger_CommunicationUsers(Tbl_Messenger_CommunicationUser entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_User = null;
		}
		
		private void attach_Tbl_Messenger_Messages(Tbl_Messenger_Message entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_User = this;
		}
		
		private void detach_Tbl_Messenger_Messages(Tbl_Messenger_Message entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Messenger_Communication")]
	public partial class Tbl_Messenger_Communication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Fld_Communication_ID;
		
		private string _Fld_Communication_Name;
		
		private int _Fld_CommunicationType_ID;
		
		private EntitySet<Tbl_Messenger_CommunicationUser> _Tbl_Messenger_CommunicationUsers;
		
		private EntitySet<Tbl_Messenger_Message> _Tbl_Messenger_Messages;
		
		private EntityRef<Tbl_Messenger_CommunicationType> _Tbl_Messenger_CommunicationType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFld_Communication_IDChanging(long value);
    partial void OnFld_Communication_IDChanged();
    partial void OnFld_Communication_NameChanging(string value);
    partial void OnFld_Communication_NameChanged();
    partial void OnFld_CommunicationType_IDChanging(int value);
    partial void OnFld_CommunicationType_IDChanged();
    #endregion
		
		public Tbl_Messenger_Communication()
		{
			this._Tbl_Messenger_CommunicationUsers = new EntitySet<Tbl_Messenger_CommunicationUser>(new Action<Tbl_Messenger_CommunicationUser>(this.attach_Tbl_Messenger_CommunicationUsers), new Action<Tbl_Messenger_CommunicationUser>(this.detach_Tbl_Messenger_CommunicationUsers));
			this._Tbl_Messenger_Messages = new EntitySet<Tbl_Messenger_Message>(new Action<Tbl_Messenger_Message>(this.attach_Tbl_Messenger_Messages), new Action<Tbl_Messenger_Message>(this.detach_Tbl_Messenger_Messages));
			this._Tbl_Messenger_CommunicationType = default(EntityRef<Tbl_Messenger_CommunicationType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Communication_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Fld_Communication_ID
		{
			get
			{
				return this._Fld_Communication_ID;
			}
			set
			{
				if ((this._Fld_Communication_ID != value))
				{
					this.OnFld_Communication_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_Communication_ID = value;
					this.SendPropertyChanged("Fld_Communication_ID");
					this.OnFld_Communication_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Communication_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Fld_Communication_Name
		{
			get
			{
				return this._Fld_Communication_Name;
			}
			set
			{
				if ((this._Fld_Communication_Name != value))
				{
					this.OnFld_Communication_NameChanging(value);
					this.SendPropertyChanging();
					this._Fld_Communication_Name = value;
					this.SendPropertyChanged("Fld_Communication_Name");
					this.OnFld_Communication_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_CommunicationType_ID", DbType="Int NOT NULL")]
		public int Fld_CommunicationType_ID
		{
			get
			{
				return this._Fld_CommunicationType_ID;
			}
			set
			{
				if ((this._Fld_CommunicationType_ID != value))
				{
					if (this._Tbl_Messenger_CommunicationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFld_CommunicationType_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_CommunicationType_ID = value;
					this.SendPropertyChanged("Fld_CommunicationType_ID");
					this.OnFld_CommunicationType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_Communication_Tbl_Messenger_CommunicationUser", Storage="_Tbl_Messenger_CommunicationUsers", ThisKey="Fld_Communication_ID", OtherKey="Fld_Communication_ID")]
		public EntitySet<Tbl_Messenger_CommunicationUser> Tbl_Messenger_CommunicationUsers
		{
			get
			{
				return this._Tbl_Messenger_CommunicationUsers;
			}
			set
			{
				this._Tbl_Messenger_CommunicationUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_Communication_Tbl_Messenger_Message", Storage="_Tbl_Messenger_Messages", ThisKey="Fld_Communication_ID", OtherKey="Fld_Communication_ID")]
		public EntitySet<Tbl_Messenger_Message> Tbl_Messenger_Messages
		{
			get
			{
				return this._Tbl_Messenger_Messages;
			}
			set
			{
				this._Tbl_Messenger_Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_CommunicationType_Tbl_Messenger_Communication", Storage="_Tbl_Messenger_CommunicationType", ThisKey="Fld_CommunicationType_ID", OtherKey="Fld_CommunicationType_ID", IsForeignKey=true)]
		public Tbl_Messenger_CommunicationType Tbl_Messenger_CommunicationType
		{
			get
			{
				return this._Tbl_Messenger_CommunicationType.Entity;
			}
			set
			{
				Tbl_Messenger_CommunicationType previousValue = this._Tbl_Messenger_CommunicationType.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Messenger_CommunicationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Messenger_CommunicationType.Entity = null;
						previousValue.Tbl_Messenger_Communications.Remove(this);
					}
					this._Tbl_Messenger_CommunicationType.Entity = value;
					if ((value != null))
					{
						value.Tbl_Messenger_Communications.Add(this);
						this._Fld_CommunicationType_ID = value.Fld_CommunicationType_ID;
					}
					else
					{
						this._Fld_CommunicationType_ID = default(int);
					}
					this.SendPropertyChanged("Tbl_Messenger_CommunicationType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Messenger_CommunicationUsers(Tbl_Messenger_CommunicationUser entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_Communication = this;
		}
		
		private void detach_Tbl_Messenger_CommunicationUsers(Tbl_Messenger_CommunicationUser entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_Communication = null;
		}
		
		private void attach_Tbl_Messenger_Messages(Tbl_Messenger_Message entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_Communication = this;
		}
		
		private void detach_Tbl_Messenger_Messages(Tbl_Messenger_Message entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_Communication = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Messenger_CommunicationType")]
	public partial class Tbl_Messenger_CommunicationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Fld_CommunicationType_ID;
		
		private string _Fld_CommunicationType_Text;
		
		private EntitySet<Tbl_Messenger_Communication> _Tbl_Messenger_Communications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFld_CommunicationType_IDChanging(int value);
    partial void OnFld_CommunicationType_IDChanged();
    partial void OnFld_CommunicationType_TextChanging(string value);
    partial void OnFld_CommunicationType_TextChanged();
    #endregion
		
		public Tbl_Messenger_CommunicationType()
		{
			this._Tbl_Messenger_Communications = new EntitySet<Tbl_Messenger_Communication>(new Action<Tbl_Messenger_Communication>(this.attach_Tbl_Messenger_Communications), new Action<Tbl_Messenger_Communication>(this.detach_Tbl_Messenger_Communications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_CommunicationType_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Fld_CommunicationType_ID
		{
			get
			{
				return this._Fld_CommunicationType_ID;
			}
			set
			{
				if ((this._Fld_CommunicationType_ID != value))
				{
					this.OnFld_CommunicationType_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_CommunicationType_ID = value;
					this.SendPropertyChanged("Fld_CommunicationType_ID");
					this.OnFld_CommunicationType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_CommunicationType_Text", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Fld_CommunicationType_Text
		{
			get
			{
				return this._Fld_CommunicationType_Text;
			}
			set
			{
				if ((this._Fld_CommunicationType_Text != value))
				{
					this.OnFld_CommunicationType_TextChanging(value);
					this.SendPropertyChanging();
					this._Fld_CommunicationType_Text = value;
					this.SendPropertyChanged("Fld_CommunicationType_Text");
					this.OnFld_CommunicationType_TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_CommunicationType_Tbl_Messenger_Communication", Storage="_Tbl_Messenger_Communications", ThisKey="Fld_CommunicationType_ID", OtherKey="Fld_CommunicationType_ID")]
		public EntitySet<Tbl_Messenger_Communication> Tbl_Messenger_Communications
		{
			get
			{
				return this._Tbl_Messenger_Communications;
			}
			set
			{
				this._Tbl_Messenger_Communications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Messenger_Communications(Tbl_Messenger_Communication entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_CommunicationType = this;
		}
		
		private void detach_Tbl_Messenger_Communications(Tbl_Messenger_Communication entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_CommunicationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Messenger_CommunicationUser")]
	public partial class Tbl_Messenger_CommunicationUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Fld_CommunicationUser_ID;
		
		private long _Fld_Communication_ID;
		
		private long _Fld_User_ID;
		
		private System.Nullable<long> _Fld_LastSeenID;
		
		private System.DateTime _Fld_LastSeenDateTime;
		
		private bool _Fld_IsTop;
		
		private EntityRef<Tbl_Messenger_Communication> _Tbl_Messenger_Communication;
		
		private EntityRef<Tbl_Messenger_User> _Tbl_Messenger_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFld_CommunicationUser_IDChanging(long value);
    partial void OnFld_CommunicationUser_IDChanged();
    partial void OnFld_Communication_IDChanging(long value);
    partial void OnFld_Communication_IDChanged();
    partial void OnFld_User_IDChanging(long value);
    partial void OnFld_User_IDChanged();
    partial void OnFld_LastSeenIDChanging(System.Nullable<long> value);
    partial void OnFld_LastSeenIDChanged();
    partial void OnFld_LastSeenDateTimeChanging(System.DateTime value);
    partial void OnFld_LastSeenDateTimeChanged();
    partial void OnFld_IsTopChanging(bool value);
    partial void OnFld_IsTopChanged();
    #endregion
		
		public Tbl_Messenger_CommunicationUser()
		{
			this._Tbl_Messenger_Communication = default(EntityRef<Tbl_Messenger_Communication>);
			this._Tbl_Messenger_User = default(EntityRef<Tbl_Messenger_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_CommunicationUser_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Fld_CommunicationUser_ID
		{
			get
			{
				return this._Fld_CommunicationUser_ID;
			}
			set
			{
				if ((this._Fld_CommunicationUser_ID != value))
				{
					this.OnFld_CommunicationUser_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_CommunicationUser_ID = value;
					this.SendPropertyChanged("Fld_CommunicationUser_ID");
					this.OnFld_CommunicationUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Communication_ID", DbType="BigInt NOT NULL")]
		public long Fld_Communication_ID
		{
			get
			{
				return this._Fld_Communication_ID;
			}
			set
			{
				if ((this._Fld_Communication_ID != value))
				{
					if (this._Tbl_Messenger_Communication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFld_Communication_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_Communication_ID = value;
					this.SendPropertyChanged("Fld_Communication_ID");
					this.OnFld_Communication_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_User_ID", DbType="BigInt NOT NULL")]
		public long Fld_User_ID
		{
			get
			{
				return this._Fld_User_ID;
			}
			set
			{
				if ((this._Fld_User_ID != value))
				{
					if (this._Tbl_Messenger_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFld_User_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_User_ID = value;
					this.SendPropertyChanged("Fld_User_ID");
					this.OnFld_User_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_LastSeenID", DbType="BigInt")]
		public System.Nullable<long> Fld_LastSeenID
		{
			get
			{
				return this._Fld_LastSeenID;
			}
			set
			{
				if ((this._Fld_LastSeenID != value))
				{
					this.OnFld_LastSeenIDChanging(value);
					this.SendPropertyChanging();
					this._Fld_LastSeenID = value;
					this.SendPropertyChanged("Fld_LastSeenID");
					this.OnFld_LastSeenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_LastSeenDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime Fld_LastSeenDateTime
		{
			get
			{
				return this._Fld_LastSeenDateTime;
			}
			set
			{
				if ((this._Fld_LastSeenDateTime != value))
				{
					this.OnFld_LastSeenDateTimeChanging(value);
					this.SendPropertyChanging();
					this._Fld_LastSeenDateTime = value;
					this.SendPropertyChanged("Fld_LastSeenDateTime");
					this.OnFld_LastSeenDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_IsTop", DbType="Bit NOT NULL")]
		public bool Fld_IsTop
		{
			get
			{
				return this._Fld_IsTop;
			}
			set
			{
				if ((this._Fld_IsTop != value))
				{
					this.OnFld_IsTopChanging(value);
					this.SendPropertyChanging();
					this._Fld_IsTop = value;
					this.SendPropertyChanged("Fld_IsTop");
					this.OnFld_IsTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_Communication_Tbl_Messenger_CommunicationUser", Storage="_Tbl_Messenger_Communication", ThisKey="Fld_Communication_ID", OtherKey="Fld_Communication_ID", IsForeignKey=true)]
		public Tbl_Messenger_Communication Tbl_Messenger_Communication
		{
			get
			{
				return this._Tbl_Messenger_Communication.Entity;
			}
			set
			{
				Tbl_Messenger_Communication previousValue = this._Tbl_Messenger_Communication.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Messenger_Communication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Messenger_Communication.Entity = null;
						previousValue.Tbl_Messenger_CommunicationUsers.Remove(this);
					}
					this._Tbl_Messenger_Communication.Entity = value;
					if ((value != null))
					{
						value.Tbl_Messenger_CommunicationUsers.Add(this);
						this._Fld_Communication_ID = value.Fld_Communication_ID;
					}
					else
					{
						this._Fld_Communication_ID = default(long);
					}
					this.SendPropertyChanged("Tbl_Messenger_Communication");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_User_Tbl_Messenger_CommunicationUser", Storage="_Tbl_Messenger_User", ThisKey="Fld_User_ID", OtherKey="Fld_User_ID", IsForeignKey=true)]
		public Tbl_Messenger_User Tbl_Messenger_User
		{
			get
			{
				return this._Tbl_Messenger_User.Entity;
			}
			set
			{
				Tbl_Messenger_User previousValue = this._Tbl_Messenger_User.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Messenger_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Messenger_User.Entity = null;
						previousValue.Tbl_Messenger_CommunicationUsers.Remove(this);
					}
					this._Tbl_Messenger_User.Entity = value;
					if ((value != null))
					{
						value.Tbl_Messenger_CommunicationUsers.Add(this);
						this._Fld_User_ID = value.Fld_User_ID;
					}
					else
					{
						this._Fld_User_ID = default(long);
					}
					this.SendPropertyChanged("Tbl_Messenger_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Messenger_Joined")]
	public partial class Tbl_Messenger_Joined : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Fld_Messenger_Joined_ID;
		
		private string _Fld_Messenger_Joined_Text;
		
		private EntitySet<Tbl_Messenger_Message> _Tbl_Messenger_Messages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFld_Messenger_Joined_IDChanging(int value);
    partial void OnFld_Messenger_Joined_IDChanged();
    partial void OnFld_Messenger_Joined_TextChanging(string value);
    partial void OnFld_Messenger_Joined_TextChanged();
    #endregion
		
		public Tbl_Messenger_Joined()
		{
			this._Tbl_Messenger_Messages = new EntitySet<Tbl_Messenger_Message>(new Action<Tbl_Messenger_Message>(this.attach_Tbl_Messenger_Messages), new Action<Tbl_Messenger_Message>(this.detach_Tbl_Messenger_Messages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Messenger_Joined_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Fld_Messenger_Joined_ID
		{
			get
			{
				return this._Fld_Messenger_Joined_ID;
			}
			set
			{
				if ((this._Fld_Messenger_Joined_ID != value))
				{
					this.OnFld_Messenger_Joined_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_Messenger_Joined_ID = value;
					this.SendPropertyChanged("Fld_Messenger_Joined_ID");
					this.OnFld_Messenger_Joined_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Messenger_Joined_Text", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Fld_Messenger_Joined_Text
		{
			get
			{
				return this._Fld_Messenger_Joined_Text;
			}
			set
			{
				if ((this._Fld_Messenger_Joined_Text != value))
				{
					this.OnFld_Messenger_Joined_TextChanging(value);
					this.SendPropertyChanging();
					this._Fld_Messenger_Joined_Text = value;
					this.SendPropertyChanged("Fld_Messenger_Joined_Text");
					this.OnFld_Messenger_Joined_TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_Joined_Tbl_Messenger_Message", Storage="_Tbl_Messenger_Messages", ThisKey="Fld_Messenger_Joined_ID", OtherKey="Fld_Messenger_Joined_ID")]
		public EntitySet<Tbl_Messenger_Message> Tbl_Messenger_Messages
		{
			get
			{
				return this._Tbl_Messenger_Messages;
			}
			set
			{
				this._Tbl_Messenger_Messages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Messenger_Messages(Tbl_Messenger_Message entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_Joined = this;
		}
		
		private void detach_Tbl_Messenger_Messages(Tbl_Messenger_Message entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_Joined = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Messenger_Message")]
	public partial class Tbl_Messenger_Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Fld_Message_ID;
		
		private long _Fld_Communication_ID;
		
		private System.Nullable<long> _Fld_Attachment_ID;
		
		private System.Nullable<long> _Fld_Message_ReplayID;
		
		private long _Fld_Message_SenderID;
		
		private System.DateTime _Fld_Message_SendDateTime;
		
		private string _Fld_Message_Text;
		
		private bool _Fld_Message_Immediate;
		
		private System.Nullable<int> _Fld_Messenger_Joined_ID;
		
		private string _Fld_Messenger_Joined_Value;
		
		private EntitySet<Tbl_Messenger_Message> _Tbl_Messenger_Messages;
		
		private EntityRef<Tbl_Messenger_Attachment> _Tbl_Messenger_Attachment;
		
		private EntityRef<Tbl_Messenger_User> _Tbl_Messenger_User;
		
		private EntityRef<Tbl_Messenger_Communication> _Tbl_Messenger_Communication;
		
		private EntityRef<Tbl_Messenger_Joined> _Tbl_Messenger_Joined;
		
		private EntityRef<Tbl_Messenger_Message> _Tbl_Messenger_Message1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFld_Message_IDChanging(long value);
    partial void OnFld_Message_IDChanged();
    partial void OnFld_Communication_IDChanging(long value);
    partial void OnFld_Communication_IDChanged();
    partial void OnFld_Attachment_IDChanging(System.Nullable<long> value);
    partial void OnFld_Attachment_IDChanged();
    partial void OnFld_Message_ReplayIDChanging(System.Nullable<long> value);
    partial void OnFld_Message_ReplayIDChanged();
    partial void OnFld_Message_SenderIDChanging(long value);
    partial void OnFld_Message_SenderIDChanged();
    partial void OnFld_Message_SendDateTimeChanging(System.DateTime value);
    partial void OnFld_Message_SendDateTimeChanged();
    partial void OnFld_Message_TextChanging(string value);
    partial void OnFld_Message_TextChanged();
    partial void OnFld_Message_ImmediateChanging(bool value);
    partial void OnFld_Message_ImmediateChanged();
    partial void OnFld_Messenger_Joined_IDChanging(System.Nullable<int> value);
    partial void OnFld_Messenger_Joined_IDChanged();
    partial void OnFld_Messenger_Joined_ValueChanging(string value);
    partial void OnFld_Messenger_Joined_ValueChanged();
    #endregion
		
		public Tbl_Messenger_Message()
		{
			this._Tbl_Messenger_Messages = new EntitySet<Tbl_Messenger_Message>(new Action<Tbl_Messenger_Message>(this.attach_Tbl_Messenger_Messages), new Action<Tbl_Messenger_Message>(this.detach_Tbl_Messenger_Messages));
			this._Tbl_Messenger_Attachment = default(EntityRef<Tbl_Messenger_Attachment>);
			this._Tbl_Messenger_User = default(EntityRef<Tbl_Messenger_User>);
			this._Tbl_Messenger_Communication = default(EntityRef<Tbl_Messenger_Communication>);
			this._Tbl_Messenger_Joined = default(EntityRef<Tbl_Messenger_Joined>);
			this._Tbl_Messenger_Message1 = default(EntityRef<Tbl_Messenger_Message>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Message_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Fld_Message_ID
		{
			get
			{
				return this._Fld_Message_ID;
			}
			set
			{
				if ((this._Fld_Message_ID != value))
				{
					this.OnFld_Message_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_Message_ID = value;
					this.SendPropertyChanged("Fld_Message_ID");
					this.OnFld_Message_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Communication_ID", DbType="BigInt NOT NULL")]
		public long Fld_Communication_ID
		{
			get
			{
				return this._Fld_Communication_ID;
			}
			set
			{
				if ((this._Fld_Communication_ID != value))
				{
					if (this._Tbl_Messenger_Communication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFld_Communication_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_Communication_ID = value;
					this.SendPropertyChanged("Fld_Communication_ID");
					this.OnFld_Communication_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Attachment_ID", DbType="BigInt")]
		public System.Nullable<long> Fld_Attachment_ID
		{
			get
			{
				return this._Fld_Attachment_ID;
			}
			set
			{
				if ((this._Fld_Attachment_ID != value))
				{
					if (this._Tbl_Messenger_Attachment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFld_Attachment_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_Attachment_ID = value;
					this.SendPropertyChanged("Fld_Attachment_ID");
					this.OnFld_Attachment_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Message_ReplayID", DbType="BigInt")]
		public System.Nullable<long> Fld_Message_ReplayID
		{
			get
			{
				return this._Fld_Message_ReplayID;
			}
			set
			{
				if ((this._Fld_Message_ReplayID != value))
				{
					if (this._Tbl_Messenger_Message1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFld_Message_ReplayIDChanging(value);
					this.SendPropertyChanging();
					this._Fld_Message_ReplayID = value;
					this.SendPropertyChanged("Fld_Message_ReplayID");
					this.OnFld_Message_ReplayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Message_SenderID", DbType="BigInt NOT NULL")]
		public long Fld_Message_SenderID
		{
			get
			{
				return this._Fld_Message_SenderID;
			}
			set
			{
				if ((this._Fld_Message_SenderID != value))
				{
					if (this._Tbl_Messenger_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFld_Message_SenderIDChanging(value);
					this.SendPropertyChanging();
					this._Fld_Message_SenderID = value;
					this.SendPropertyChanged("Fld_Message_SenderID");
					this.OnFld_Message_SenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Message_SendDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime Fld_Message_SendDateTime
		{
			get
			{
				return this._Fld_Message_SendDateTime;
			}
			set
			{
				if ((this._Fld_Message_SendDateTime != value))
				{
					this.OnFld_Message_SendDateTimeChanging(value);
					this.SendPropertyChanging();
					this._Fld_Message_SendDateTime = value;
					this.SendPropertyChanged("Fld_Message_SendDateTime");
					this.OnFld_Message_SendDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Message_Text", DbType="NVarChar(2000)")]
		public string Fld_Message_Text
		{
			get
			{
				return this._Fld_Message_Text;
			}
			set
			{
				if ((this._Fld_Message_Text != value))
				{
					this.OnFld_Message_TextChanging(value);
					this.SendPropertyChanging();
					this._Fld_Message_Text = value;
					this.SendPropertyChanged("Fld_Message_Text");
					this.OnFld_Message_TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Message_Immediate", DbType="Bit NOT NULL")]
		public bool Fld_Message_Immediate
		{
			get
			{
				return this._Fld_Message_Immediate;
			}
			set
			{
				if ((this._Fld_Message_Immediate != value))
				{
					this.OnFld_Message_ImmediateChanging(value);
					this.SendPropertyChanging();
					this._Fld_Message_Immediate = value;
					this.SendPropertyChanged("Fld_Message_Immediate");
					this.OnFld_Message_ImmediateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Messenger_Joined_ID", DbType="Int")]
		public System.Nullable<int> Fld_Messenger_Joined_ID
		{
			get
			{
				return this._Fld_Messenger_Joined_ID;
			}
			set
			{
				if ((this._Fld_Messenger_Joined_ID != value))
				{
					if (this._Tbl_Messenger_Joined.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFld_Messenger_Joined_IDChanging(value);
					this.SendPropertyChanging();
					this._Fld_Messenger_Joined_ID = value;
					this.SendPropertyChanged("Fld_Messenger_Joined_ID");
					this.OnFld_Messenger_Joined_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Messenger_Joined_Value", DbType="NVarChar(18)")]
		public string Fld_Messenger_Joined_Value
		{
			get
			{
				return this._Fld_Messenger_Joined_Value;
			}
			set
			{
				if ((this._Fld_Messenger_Joined_Value != value))
				{
					this.OnFld_Messenger_Joined_ValueChanging(value);
					this.SendPropertyChanging();
					this._Fld_Messenger_Joined_Value = value;
					this.SendPropertyChanged("Fld_Messenger_Joined_Value");
					this.OnFld_Messenger_Joined_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_Message_Tbl_Messenger_Message", Storage="_Tbl_Messenger_Messages", ThisKey="Fld_Message_ID", OtherKey="Fld_Message_ReplayID")]
		public EntitySet<Tbl_Messenger_Message> Tbl_Messenger_Messages
		{
			get
			{
				return this._Tbl_Messenger_Messages;
			}
			set
			{
				this._Tbl_Messenger_Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_Attachment_Tbl_Messenger_Message", Storage="_Tbl_Messenger_Attachment", ThisKey="Fld_Attachment_ID", OtherKey="Fld_Attachment_ID", IsForeignKey=true)]
		public Tbl_Messenger_Attachment Tbl_Messenger_Attachment
		{
			get
			{
				return this._Tbl_Messenger_Attachment.Entity;
			}
			set
			{
				Tbl_Messenger_Attachment previousValue = this._Tbl_Messenger_Attachment.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Messenger_Attachment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Messenger_Attachment.Entity = null;
						previousValue.Tbl_Messenger_Messages.Remove(this);
					}
					this._Tbl_Messenger_Attachment.Entity = value;
					if ((value != null))
					{
						value.Tbl_Messenger_Messages.Add(this);
						this._Fld_Attachment_ID = value.Fld_Attachment_ID;
					}
					else
					{
						this._Fld_Attachment_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Tbl_Messenger_Attachment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_User_Tbl_Messenger_Message", Storage="_Tbl_Messenger_User", ThisKey="Fld_Message_SenderID", OtherKey="Fld_User_ID", IsForeignKey=true)]
		public Tbl_Messenger_User Tbl_Messenger_User
		{
			get
			{
				return this._Tbl_Messenger_User.Entity;
			}
			set
			{
				Tbl_Messenger_User previousValue = this._Tbl_Messenger_User.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Messenger_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Messenger_User.Entity = null;
						previousValue.Tbl_Messenger_Messages.Remove(this);
					}
					this._Tbl_Messenger_User.Entity = value;
					if ((value != null))
					{
						value.Tbl_Messenger_Messages.Add(this);
						this._Fld_Message_SenderID = value.Fld_User_ID;
					}
					else
					{
						this._Fld_Message_SenderID = default(long);
					}
					this.SendPropertyChanged("Tbl_Messenger_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_Communication_Tbl_Messenger_Message", Storage="_Tbl_Messenger_Communication", ThisKey="Fld_Communication_ID", OtherKey="Fld_Communication_ID", IsForeignKey=true)]
		public Tbl_Messenger_Communication Tbl_Messenger_Communication
		{
			get
			{
				return this._Tbl_Messenger_Communication.Entity;
			}
			set
			{
				Tbl_Messenger_Communication previousValue = this._Tbl_Messenger_Communication.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Messenger_Communication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Messenger_Communication.Entity = null;
						previousValue.Tbl_Messenger_Messages.Remove(this);
					}
					this._Tbl_Messenger_Communication.Entity = value;
					if ((value != null))
					{
						value.Tbl_Messenger_Messages.Add(this);
						this._Fld_Communication_ID = value.Fld_Communication_ID;
					}
					else
					{
						this._Fld_Communication_ID = default(long);
					}
					this.SendPropertyChanged("Tbl_Messenger_Communication");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_Joined_Tbl_Messenger_Message", Storage="_Tbl_Messenger_Joined", ThisKey="Fld_Messenger_Joined_ID", OtherKey="Fld_Messenger_Joined_ID", IsForeignKey=true)]
		public Tbl_Messenger_Joined Tbl_Messenger_Joined
		{
			get
			{
				return this._Tbl_Messenger_Joined.Entity;
			}
			set
			{
				Tbl_Messenger_Joined previousValue = this._Tbl_Messenger_Joined.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Messenger_Joined.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Messenger_Joined.Entity = null;
						previousValue.Tbl_Messenger_Messages.Remove(this);
					}
					this._Tbl_Messenger_Joined.Entity = value;
					if ((value != null))
					{
						value.Tbl_Messenger_Messages.Add(this);
						this._Fld_Messenger_Joined_ID = value.Fld_Messenger_Joined_ID;
					}
					else
					{
						this._Fld_Messenger_Joined_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_Messenger_Joined");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Messenger_Message_Tbl_Messenger_Message", Storage="_Tbl_Messenger_Message1", ThisKey="Fld_Message_ReplayID", OtherKey="Fld_Message_ID", IsForeignKey=true)]
		public Tbl_Messenger_Message Tbl_Messenger_Message1
		{
			get
			{
				return this._Tbl_Messenger_Message1.Entity;
			}
			set
			{
				Tbl_Messenger_Message previousValue = this._Tbl_Messenger_Message1.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Messenger_Message1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Messenger_Message1.Entity = null;
						previousValue.Tbl_Messenger_Messages.Remove(this);
					}
					this._Tbl_Messenger_Message1.Entity = value;
					if ((value != null))
					{
						value.Tbl_Messenger_Messages.Add(this);
						this._Fld_Message_ReplayID = value.Fld_Message_ID;
					}
					else
					{
						this._Fld_Message_ReplayID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Tbl_Messenger_Message1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Messenger_Messages(Tbl_Messenger_Message entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_Message1 = this;
		}
		
		private void detach_Tbl_Messenger_Messages(Tbl_Messenger_Message entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Messenger_Message1 = null;
		}
	}
	
	public partial class SelectCommunicationIdResult
	{
		
		private long _Fld_Communication_ID;
		
		public SelectCommunicationIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fld_Communication_ID", DbType="BigInt NOT NULL")]
		public long Fld_Communication_ID
		{
			get
			{
				return this._Fld_Communication_ID;
			}
			set
			{
				if ((this._Fld_Communication_ID != value))
				{
					this._Fld_Communication_ID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
